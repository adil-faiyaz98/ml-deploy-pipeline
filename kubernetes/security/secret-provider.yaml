apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: ml-deploy-secrets
  namespace: ml-deploy
spec:
  provider: ${CLOUD_PROVIDER_SECRETSTORE}  # aws/azure/gcp
  parameters:
    # AWS parameters
    awsObjects: |
      - objectName: "ml-deploy/${ENVIRONMENT}/db-password"
        objectType: "secretsmanager"
        objectAlias: "db-password"
      - objectName: "ml-deploy/${ENVIRONMENT}/redis-password"
        objectType: "secretsmanager"
        objectAlias: "redis-password"
      - objectName: "ml-deploy/${ENVIRONMENT}/api-keys"
        objectType: "secretsmanager"
        objectAlias: "api-keys"
    # Azure parameters
    keyvaultName: "ml-deploy-${ENVIRONMENT}-kv"
    tenantId: "${AZURE_TENANT_ID}"
    cloudName: "AzurePublicCloud"
    azureObjects: |
      - |
        objectName: db-password
        objectType: secret
        objectVersion: ""
      - |
        objectName: redis-password
        objectType: secret
        objectVersion: ""
      - |
        objectName: api-keys
        objectType: secret
        objectVersion: ""
    # GCP parameters
    projectId: "${GCP_PROJECT_ID}"
    gcpSecrets: |
      - resourceName: "projects/${GCP_PROJECT_NUMBER}/secrets/db-password/versions/latest"
        path: "db-password"
      - resourceName: "projects/${GCP_PROJECT_NUMBER}/secrets/redis-password/versions/latest"
        path: "redis-password"
      - resourceName: "projects/${GCP_PROJECT_NUMBER}/secrets/api-keys/versions/latest"
        path: "api-keys"
  secretObjects:
  - secretName: db-credentials
    type: Opaque
    data:
    - objectName: db-password
      key: db-password
  - secretName: redis-credentials
    type: Opaque
    data:
    - objectName: redis-password
      key: redis-password
  - secretName: api-credentials
    type: Opaque
    data:
    - objectName: api-keys
      key: api-keys